{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SeachBox","searchChange","type","placeholder","onChange","Scroll","props","console","log","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","SearchBox","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAiBeA,EAdF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAG3B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WACpD,gCACE,6BAAKL,IACL,4BAAIC,WCMGK,EAdE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BAIIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OAAO,cAAC,EAAD,CAAcR,GAAIK,EAAOG,GAAGR,GAAIF,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,OAA5DS,SCAbC,EARE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAClB,OACE,qBAAKT,UAAU,MAAf,SACE,uBAAOA,UAAU,mCAAmCU,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCI/FI,EAPA,SAACC,GAId,OAHAC,QAAQC,IAAIF,GAGL,qBAAKG,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SAAkFN,EAAMO,YCiBlFC,E,kDApBb,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IACDS,MAAQ,CACXC,UAAU,GAHK,E,qDAQnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,0DAEFG,KAAKb,MAAMO,a,GAjBMQ,IAAMC,WCgEnBC,G,wDAtDb,aAAe,IAAD,8BAEZ,gBAmBFC,eAAiB,SAACC,GAGhB,EAAKL,SAAS,CAAEM,YAAaD,EAAME,OAAOC,SApB1C,EAAKb,MAAQ,CAEXnB,OAAQ,GACR8B,YAAa,IAPH,E,qDAad,WAAqB,IAAD,OAElBG,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKb,SAAS,CAAExB,OAAQqC,S,oBAW7C,WAAU,IAAD,EACyBd,KAAKJ,MAA7BnB,EADD,EACCA,OAAQ8B,EADT,EACSA,YACVQ,EAAiBtC,EAAOuC,QAAO,SAACC,GACpC,OAAOA,EAAM/C,KAAKgD,oBAAoBC,SAASZ,EAAYW,wBAG7D,OAAKzC,EAAO2C,OAIR,sBAAK/C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAACgD,EAAD,CAAWvC,aAAckB,KAAKK,iBAE9B,cAAC,EAAD,UAEE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU5B,OAAQsC,WAVnB,6C,GApCKZ,cCCHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.afe21a4b.chunk.js","sourcesContent":["import React from \"react\"\n\n// receive props and de-structing props\nconst Card = ({ name, email, id }) => {\n  // de-structuring, replace props.name => name\n  // const { name, email, id } = props\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from \"react\"\nimport Card from \"./Card\"\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {\n        // .map(name, index)\n        // need to add uniqle Key, sth do not change (e.g. index)\n        robots.map((user, i) => {\n          return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\n        })\n      }\n    </div>\n  )\n}\n\nexport default CardList\n","import React from \"react\"\n\nconst SeachBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" placeholder=\"Search Robots\" onChange={searchChange} />\n    </div>\n  )\n}\n\nexport default SeachBox\n","import React from \"react\"\n\nconst Scroll = (props) => {\n  console.log(props)\n  // style={} = JSX\n  // rap in {} object\n  return <div style={{ overflowY: \"scroll\", border: \"1px solid black\", height: \"500px\" }}>{props.children}</div>\n}\n\nexport default Scroll\n","import React, { Component } from \"react\"\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hasError: false,\n    }\n  }\n\n  // = try, catch block\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Ooops, That is not good!</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { Component } from \"react\"\nimport CardList from \"../components/CardList\"\nimport SearchBox from \"../components/SearchBox\"\nimport Scroll from \"../components/Scroll\"\nimport ErrorBoundary from \"../components/ErrorBoundry\"\n// import { robots } from \"./robots\"\n\nimport \"./App.css\"\n\n// class = object\n// have state = smart component -> class syntax\nclass App extends Component {\n  constructor() {\n    // constructor of component\n    super()\n    // state = live in parent component\n    this.state = {\n      // state = description of App\n      robots: [],\n      searchfield: \"\",\n    }\n  }\n\n  // run when the page loaded\n  // update the state\n  componentDidMount() {\n    // window.fetch() = make req to server\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }))\n  }\n\n  // use arrow function, this = App\n  onSearchChange = (event) => {\n    // = this.state.searchfield\n    // updated searchfield\n    this.setState({ searchfield: event.target.value })\n    // this = refer to input\n  }\n\n  render() {\n    const { robots, searchfield } = this.state\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase())\n    })\n\n    if (!robots.length) {\n      return <h1>Loading</h1>\n    } else {\n      return (\n        <div className=\"tc\">\n          <h1 className=\"f1\">RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          {/* can only wrap component */}\n          <Scroll>\n            {/* pass through props */}\n            <ErrorBoundary>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      )\n    }\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./containers/App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport \"tachyons\"\n// not export default, need to de-structuring {}\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}